diff --git a/dixtrac/scsi_conv.c b/dixtrac/scsi_conv.c
index 0614729..b1217da 100644
--- a/dixtrac/scsi_conv.c
+++ b/dixtrac/scsi_conv.c
@@ -23,7 +23,7 @@
 #include "dixtrac.h"
 #include "scsi_conv.h"
 
-__inline void
+void
 _lto2b(u_int32_t val, u_int8_t *bytes)
 {
 
@@ -31,7 +31,7 @@ _lto2b(u_int32_t val, u_int8_t *bytes)
 	bytes[1] = val & 0xff;
 }
 
-__inline void
+void
 _lto3b(u_int32_t val, u_int8_t *bytes)
 {
 
@@ -40,7 +40,7 @@ _lto3b(u_int32_t val, u_int8_t *bytes)
 	bytes[2] = val & 0xff;
 }
 
-__inline void
+void
 _lto4b(u_int32_t val, u_int8_t *bytes)
 {
 
@@ -50,7 +50,7 @@ _lto4b(u_int32_t val, u_int8_t *bytes)
 	bytes[3] = val & 0xff;
 }
 
-__inline u_int32_t
+u_int32_t
 _2btol(u_int8_t *bytes)
 {
 	register u_int32_t rv;
@@ -60,7 +60,7 @@ _2btol(u_int8_t *bytes)
 	return (rv);
 }
 
-__inline u_int32_t
+u_int32_t
 _3btol(u_int8_t *bytes)
 {
 	register u_int32_t rv;
@@ -71,7 +71,7 @@ _3btol(u_int8_t *bytes)
 	return (rv);
 }
 
-__inline u_int32_t
+u_int32_t
 _4btol(u_int8_t *bytes)
 {
 	register u_int32_t rv;
diff --git a/dixtrac/scsi_conv.h b/dixtrac/scsi_conv.h
index 6ffa455..c48b080 100644
--- a/dixtrac/scsi_conv.h
+++ b/dixtrac/scsi_conv.h
@@ -25,11 +25,11 @@
 
 #include <sys/types.h> 
 
-__inline void _lto2b __P((u_int32_t val, u_int8_t *bytes));
-__inline void _lto3b __P((u_int32_t val, u_int8_t *bytes));
-__inline void _lto4b __P((u_int32_t val, u_int8_t *bytes));
-__inline u_int32_t _2btol __P((u_int8_t *bytes));
-__inline u_int32_t _3btol __P((u_int8_t *bytes));
-__inline u_int32_t _4btol __P((u_int8_t *bytes));
+void _lto2b __P((u_int32_t val, u_int8_t *bytes));
+void _lto3b __P((u_int32_t val, u_int8_t *bytes));
+void _lto4b __P((u_int32_t val, u_int8_t *bytes));
+u_int32_t _2btol __P((u_int8_t *bytes));
+u_int32_t _3btol __P((u_int8_t *bytes));
+u_int32_t _4btol __P((u_int8_t *bytes));
 
 #endif /* SCSI_CONV_H */
diff --git a/src/disksim.c b/src/disksim.c
index ccc566d..ad74d53 100644
--- a/src/disksim.c
+++ b/src/disksim.c
@@ -173,7 +173,7 @@ int addtoextraq_check(event *ev)
 
 /* Deallocates an event structure, adding it to the extraq free pool. */
   
-INLINE void addtoextraq (event *temp)
+void addtoextraq (event *temp)
 {
   // addtoextraq_check(temp);
 
@@ -190,7 +190,7 @@ INLINE void addtoextraq (event *temp)
 /* Allocates an event structure from the extraq free pool; if empty, */
 /* calls allocateextra to create some more.                          */
 
-INLINE event * getfromextraq ()
+event * getfromextraq ()
 {
   event *temp;
 
@@ -277,7 +277,7 @@ static void disksim_dumpintq ()
 
 /* make this a binheap or something ... avoid walking the list */
 
-INLINE void addtointq (event *newint)
+void addtointq (event *newint)
 {
   /* WARNING -- HORRIBLE HACK BELOW
    * In order to make the Memulator run (which sometimes has events arrive
@@ -368,7 +368,7 @@ INLINE void addtointq (event *newint)
 
 /* Retrieves the next scheduled event from the head of the intq. */
 
-INLINE static event * getfromintq ()
+static event * getfromintq ()
 {
    event *temp = NULL;
 
@@ -390,7 +390,7 @@ INLINE static event * getfromintq ()
 /* Removes a given event from the intq, thus descheduling it.  Returns */
 /* TRUE if the event was found, FALSE if it was not.                   */
 
-INLINE int removefromintq (event *curr)
+int removefromintq (event *curr)
 {
    event *tmp;
 
diff --git a/src/disksim_controller.c b/src/disksim_controller.c
index 9a7d2b4..824c206 100644
--- a/src/disksim_controller.c
+++ b/src/disksim_controller.c
@@ -113,7 +113,7 @@
 /* Currently, controllers can not communicate via ownership-type buses */
 
 
-INLINE controller * getctlr (int ctlrno)
+controller * getctlr (int ctlrno)
 {
    ctlrinfo_t *ctlrinfo = disksim->ctlrinfo;
    ASSERT1((ctlrno >= 0) && (ctlrno < ctlrinfo->numcontrollers), "ctlrno", ctlrno);
diff --git a/src/disksim_ctlr.h b/src/disksim_ctlr.h
index 1f301db..1f15433 100644
--- a/src/disksim_ctlr.h
+++ b/src/disksim_ctlr.h
@@ -212,7 +212,7 @@ void controller_smart_printstats (controller *currctlr, char *prefix);
 
 /* controller.c functions */
 
-INLINE controller * getctlr (int ctlrno);
+controller * getctlr (int ctlrno);
 controller *getctlrbyname(char *name, int *num);
 
 int load_ctlr_topo(struct lp_topospec *t, int *inbus);
diff --git a/src/disksim_disk.c b/src/disksim_disk.c
index 9387b9d..f4924bc 100644
--- a/src/disksim_disk.c
+++ b/src/disksim_disk.c
@@ -118,7 +118,7 @@ static char *statdesc_postimestats	=	"Positioning time";
 static char *statdesc_acctimestats	=	"Access time";
 
 
-INLINE struct disk *getdisk (int diskno)
+struct disk *getdisk (int diskno)
 {
    disk *currdisk;
    ASSERT1((diskno >= 0) && (diskno < MAXDEVICES), "diskno", diskno);
diff --git a/src/disksim_disk.h b/src/disksim_disk.h
index ccd5d67..7fdc111 100644
--- a/src/disksim_disk.h
+++ b/src/disksim_disk.h
@@ -587,7 +587,7 @@ void disk_interferestats(disk *currdisk, ioreq_event *curr);
  * externalized disksim_disk*.c functions (should be here?) 
  */
 
-INLINE struct disk *getdisk (int diskno);
+struct disk *getdisk (int diskno);
 struct disk *getdiskbyname(char *name);
 
 void    disk_set_syncset (int setstart, int setend);
@@ -602,7 +602,7 @@ void    disk_cleanstats(void);
 int     disk_set_depth(int diskno, int inbusno, int depth, int slotno);
 int     disk_get_depth(int diskno);
 int     disk_get_inbus(int diskno);
-INLINE int     disk_get_busno(ioreq_event *curr);
+int     disk_get_busno(ioreq_event *curr);
 int     disk_get_slotno(int diskno);
 
 
diff --git a/src/disksim_diskctlr.c b/src/disksim_diskctlr.c
index a45b674..553063c 100644
--- a/src/disksim_diskctlr.c
+++ b/src/disksim_diskctlr.c
@@ -220,7 +220,7 @@ double disk_get_blktranstime (ioreq_event *curr)
 }
 
 
-INLINE int disk_get_busno (ioreq_event *curr)
+int disk_get_busno (ioreq_event *curr)
 {
   disk *currdisk = getdisk (curr->devno);
   intchar busno;
diff --git a/src/disksim_global.h b/src/disksim_global.h
index f33fc59..d5bf6b9 100644
--- a/src/disksim_global.h
+++ b/src/disksim_global.h
@@ -468,12 +468,12 @@ void intr_acknowledge (event *intrp);
 void resetstats (void);
 void disksim_simstop (void);
 void disksim_register_checkpoint (double atsimtime);
-INLINE void addtoextraq (event *temp);
+void addtoextraq (event *temp);
 void addlisttoextraq (event **headptr);
-INLINE event * getfromextraq (void);
+event * getfromextraq (void);
 event * event_copy (event *orig);
-INLINE void addtointq (event *temp);
-INLINE int removefromintq (event *curr);
+void addtointq (event *temp);
+int removefromintq (event *curr);
 void scanparam_int (char *parline, char *parname, int *parptr, int parchecks, int parminval, int parmaxval);
 void getparam_int (FILE *parfile, char *parname, int *parptr, int parchecks, int parminval, int parmaxval);
 void getparam_double (FILE *parfile, char *parname, double *parptr, int parchecks, double parminval, double parmaxval);
diff --git a/src/disksim_logorg.c b/src/disksim_logorg.c
index 685fbae..33a3852 100644
--- a/src/disksim_logorg.c
+++ b/src/disksim_logorg.c
@@ -1672,7 +1672,7 @@ struct logorg *disksim_logorg_loadparams(struct lp_block *b)
 
 
 
-INLINE void logorg_set_arraydisk(struct logorg *l, int n) {
+void logorg_set_arraydisk(struct logorg *l, int n) {
   l->arraydisk = n;
 }
 
diff --git a/src/disksim_logorg.h b/src/disksim_logorg.h
index 664fc0b..490ac98 100644
--- a/src/disksim_logorg.h
+++ b/src/disksim_logorg.h
@@ -299,7 +299,7 @@ int  logorg_check_dependencies (logorg *currlogorg, outstand *req, ioreq_event *
 // or 0 if it doesn't exist
 logorg *getlogorgbyname(logorg **, int, char *name, int *n);
 
-INLINE void logorg_set_arraydisk(struct logorg *l, int n);
+void logorg_set_arraydisk(struct logorg *l, int n);
 
 logorg *getlogorgbyname(logorg **logorgs, 
 			int numlogorgs, 
